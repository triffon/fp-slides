%%% стандартни пакети

% поддръжка на български език
\usepackage[T2A]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[english,bulgarian]{babel}
\deftranslation[to=bulgarian]{Theorem}{Теорема}
\deftranslation[to=bulgarian]{Definition}{Дефиниция}
\deftranslation[to=bulgarian]{Corollary}{Следствие}

% избягване на предупреждения за неподдържани символи от hyperref
\hypersetup{unicode=true}

% поддръжка на линкове
\usepackage{hyperref}

% използване на специални апострофи и кавички
\usepackage{textcomp}

% форматиране на код: общи настройки
\usepackage{listings}
\lstset{
  showstringspaces=false,
  columns=fullflexible,
  keepspaces=true,
  extendedchars=false,
  keywordstyle=\color{blue},
  texcl=true,
  basicstyle=\ttfamily,
  escapechar=@
}

% форматиране на код на Haskell
\lstdefinestyle{Haskell}{
  commentstyle=\color[rgb]{0.133,0.545,0.133},
  stringstyle=\color[rgb]{0.75,0.49,0.07}
}

%%% декларативна графика
\usepackage{tikz}

% стилове за стрелки, например Stealth
\usetikzlibrary{arrows.meta}

% геометрични фигури
\usetikzlibrary{shapes.geometric}

% нужно за ключа cross out за задраскване
\usetikzlibrary{shapes.misc}

% матрици
\usetikzlibrary{matrix}

% релативно позициониране
\usetikzlibrary{positioning}

% поддръжка на beamer overlays
\usetikzlibrary{overlay-beamer-styles}

% графи за вериги от оценки
\usetikzlibrary{graphs}

% указател към #1 с име #2 на позиция #3
\newcommand{\pointerto}[3]{
  \node (x) [#3=of #1] {#2};
  \draw[pointer] (x) to (#1);
}

% стойност в паметта
\newcommand{\val}[3][] {
  \node (#2) [draw,fill=diagramblue,#1] {$#3$};
}

% сочене към стойност в паметта
\newcommand{\toval}[2]{
  \val[below=2ex of #1]x{#2}
  \draw[ptr] (#1) to (x);
}

% двойна клетка описваща точкова двойка
\newcommand{\pointcell}[2][]{
  \matrix (#2) [array,nodes={minimum width=5ex},#1] {
    |(#2data)| \& |(#2next)|\\
  };
}

% двойна клетка описваща точкова двойка с една стойност
\newcommand{\pointcellx}[3][]{
  \pointcell[#1]{#2}
  \toval{#2data}{#3}
}

% двойна клетка описваща точкова двойка с две стойности
\newcommand{\pointcellxx}[4][]{
  \pointcellx[#1]{#2}{#3}
  \toval{#2next}{#4}
}

% следваща двойна клетка
\newcommand{\nextcell}[3][]{
  \pointcell[right=2em of #3next,#1]{#2}
  \draw[ptr] (#3next.center) to (#2data);
}

% следваща двойна клетка с една стойност
\newcommand{\nextcellx}[4][]{
  \pointcellx[right=2em of #4next,#1]{#2}{#3}
  \draw[ptr] (#4next.center) to (#2data);
}

% следваща двойна клетка с две стойности
\newcommand{\nextcellxx}[5][]{
  \pointcellxx[right=2em of #5next,#1]{#2}{#3}{#4}
  \draw[ptr] (#5next.center) to (#2data);
}

% многоточие в свързана верига
\newcommand{\nextdots}[1]{
  \node (dots) [right=1em of #1] {\ldots\hspace{1em}};
  \draw[ptr] (#1next.center) to (dots);
}

% следваща клетка след многоточие
\newcommand{\dotsnextcell}[2][]{
  \pointcell[right=2em of dots,#1]{#2}
  \draw[ptr] (dots.east) to (#2data);
}

% следваща клетка след многоточие с една стойност
\newcommand{\dotsnextcellx}[3][]{
  \pointcellx[right=2em of dots,#1]{#2}{#3}
  \draw[ptr] (dots.east) to (#2data);
}

% следваща клетка след многоточие с две стойности
\newcommand{\dotsnextcellxx}[4][]{
  \pointcellxx[right=2em of dots,#1]{#2}{#3}{#4}
  \draw[ptr] (dots.east) to (#2data);
}

% зачертана кутия, означаваща NULL указател
\newcommand{\nullptr}[1]{
  \draw (#1.north east) to (#1.south west);
}

% стилове за диаграми
\tikzset{
  % стил за стрелка
  pointer/.style={-{Stealth[length=1.5ex]}},
  % стил за по-малка стрелка
  ptr/.style={-{Stealth[length=1ex]}},
  % стил за правоъгълна клетка на матрица
  mtxnode/.style={
    rectangle,
    minimum width=1.5em,
    minimum height=2ex,
    text height=1.5ex,
    text depth=0.25ex,
    fill=diagramblue,
    draw,
  },
  % базов стил за матрица
  basematrix/.style={
    ampersand replacement=\&,
    nodes in empty cells,
    % избягване на двойно дебели разделителни линии
    column sep=-\pgflinewidth,
    row sep=-\pgflinewidth,
  },
  % стил за матрица
  % ключът matrix е запазен в TikZ, затова използваме mtx
  mtx/.style={
    basematrix,
    matrix of nodes,
    nodes=mtxnode,
  },
  % стил за квадратче на дъска за шах
  chessnode/.style={
    rectangle,
    minimum width=3em,
    minimum height=3em,
    draw,
    fill=white,
    text height=2em,
  },
  % стил за дъска на шах
  chessboard/.style={
    mtx,
    nodes=chessnode,
  },
  % стил за клетка на масив от формули
  arraynode/.style={
    mtxnode,
    minimum width=3.5ex,
    minimum height=1.5em,
  },
  % стил за масив от формули
  array/.style={
    basematrix,
    matrix of math nodes,
    nodes=arraynode,
    inner sep=0pt,
  },
  % стил за широк масив от формули
  widearray/.style={
    array,
    nodes={minimum width=3em},
  },
  % стил за зачеркната клетка
  cross/.style={
    cross out,
    draw=red,
    thick,
    minimum width=5em,
    minimum height=3em
  },
  % стилове за дъгообразни стрелка
  bl/.style={bend left=15},
  br/.style={bend right=15},
  % стил за трансформираща диаграма
  graphs/transform/.style={
    use existing nodes,
    edges={thick,>=stealth}
  },
  % стил за връх на граф/дърво
  graphnode/.style={
    draw,
    circle,
    fill=diagramblue,
  },
}

% връзка между символ и стойност в среда
\newcommand{\kvx}[2]{%
  \node[anchor=base east]{#1};\&%
  \node[anchor=base]{:};\&%
  #2\\}

% обикновена стойност
\newcommand{\kv}[2]{%
  \kvx{#1}{\node[anchor=base west]{#2};}}

% функционална стойност
\newcommand{\kf}[4]{%
  \kvx{#1}{%
  \node[anchor=west,inner sep=.2em,font=\sffamily,draw,double]{%
    \begin{tabular}{@{\hskip .5em}l@{\hskip .5em}c@{\hskip .5em}l@{\hskip .5em}}
      Параметри&:&\tt{#2}\\
      Тяло&:&\tt{#3}\\
      Среда&:&\env{#4}
    \end{tabular}};}}

% среда за среда :)
\newcommand{\envir}[3][]{%
  \node (#2) [
  inner sep=0.2em,
  draw,
  rectangle split,
  rectangle split parts=2,
  rectangle split part fill={gray!20,white},
  #1] {
    \env{#2}
    \nodepart{two}
    \begin{tikzpicture}[rectangle]
      \matrix [inner sep=0.1em,ampersand replacement=\&,font=\ttfamily,row sep=.5ex] {%
        #3\\};
    \end{tikzpicture}};
}

% среда с указател към родителска среда
\newcommand{\childenvir}[5][1-]{
  \begin{scope}[visible on=<#1>]
    \envir[#2 of #3]{#4}{#5}
    \draw[pointer] (#4) to (#3);
  \end{scope}
}

% ограждане на текст с кутия на даден слайд
\newcommand<>{\altbox}[1]{\alt#2{\fcolorbox{black}{white}{#1}}{\fcolorbox{white}{white}{#1}}}

\tikzset{
  % стил за графа, описващ верига от оценки
  /evalchain/.style={
    /tikz/font=\ttfamily,
    /tikz/label distance=2em,
    /tikz/label position=left,
    grow down sep=2ex,
  },
}

% вертикална верига от оценки
\newcommand{\evalchainx}[1]{
  \begin{tikzpicture}[
    % етикет за оценяване в среда
    env/.style args={##1}{label=\inenv{##1}}]
    \graph[
    /evalchain,
    edges=ptr]
    {#1};
  \end{tikzpicture}
}

% вертикална верига от оценки с постъпково откриване
% аргументът по подразбиране обикновено е отрицателно число,
% чиято абсолютна стойност е забавяне по подразбиране на всеки възел
% използва се, например, когато искаме да правим трансформация на всеки възел с \alt<+->
\newcommand{\evalchain}[2][]{
  \begin{tikzpicture}[
    % открий на текущия слайд, игнорирайки евентуалното забавяне
    v/.style={visible on=<.->},
    % открей на предишния слайд, игнорирайки евентуалното забавяне
    vp/.style={visible on=<.(-1)->},
    % етикет за оценяване в среда, показващ се синхронизиран с основния възел
    % аргументът по подразбиране задава евентуално забавяне на етикета,
    % използва се за синхронизиране с основния възел
    env/.style args={##1}{label={[visible on=<.#1->] \inenv{##1}}},
    % също като env, но показва на текущия слайд, игнорирайки забавянето
    envv/.style args={##1}{label={[v] \inenv{##1}}},
    % също като env, но показва на предишния слайд, игнорирайки забавянето
    envp/.style args={##1}{label={[vp] \inenv{##1}}},
    % добавяне на изкуствено допълнително забавяне към определен възел,
    % използва се ако повечето възли нямат забавяне и искаме да сложим само на някои възли
    skip/.code=\addtocounter{beamerpauses}{1},
    ]
    \graph[
    /evalchain,
    % beamerpauses се увеличава при показване на възела
    nodes={visible on=<+->},
    % ребрата се показват заедно със следващия възел, вземайки предвид евентуално глобално забавяне
    edges={ptr,visible on=<.#1->}]
    {#2};
  \end{tikzpicture}
}

% зачертан текст
\usepackage{soul}

% дървета
\usepackage{forest}

% прехвърляне на стила visible on върху дървета
% източник: https://tex.stackexchange.com/a/112471
\forestset{
  visible on/.style={
    for tree={
      /tikz/visible on={#1},
      edge+={/tikz/visible on={#1}}}}}

% коментари
\usepackage{comment}

% цветни таблици
\usepackage{colortbl}

% вертикално сливане на клетки
\usepackage{multirow}

% клетки с диагонална черта
\usepackage{diagbox}

% умни интервали
\usepackage{xspace}

% вертикално подравняване на \includegraphics
\usepackage[export]{adjustbox}

\usepackage[type={CC}, modifier={by-nc-sa}, version={4.0}, imagemodifier={-eu}]{doclicense}

%%% настройки общи за всички слайдове
\mode<presentation>
{
  \usetheme{CambridgeUS}
  \usecolortheme{dolphin}
}
\author{Трифон Трифонов}
\institute[ФП 19/20]{\small Функционално програмиране, 2019/20 г.}
\titlegraphic{\vspace{8ex}\scalebox{.45}{\textcolor{gray}{Тази презентация е достъпна под лиценза Creative Commons Признание-Некомерсиално-Споделяне на споделеното 4.0 Международен \doclicenseIcon}}}
\subject{LectureSlides}

%%% кратки команди за форматиране

% код
\renewcommand{\tt}{\texttt}

% код с форматиране
\newcommand{\lst}{\lstinline}

% код в червено
\newcommand{\tta}[1]{\tt{\alert{#1}}}

% зачертан код в червено
\newcommand{\sta}[1]{\tta{\st{#1}}}

% машина на Тюринг по даден код
\newcommand{\mt}[1]{\{#1\}}

%%% макроси за оценяване

% откриване на въпрос
\newcommand{\rvl}[1]{\alt<+->{#1}?}

% оценява се до...
\newcommand{\evalstox}[1]{\lst!#1! \nolinebreak$\longrightarrow$}

% оценява се до... с нов ред
\newcommand{\evalstoxnl}[1]{\lst!#1! \\$\longrightarrow$}

% оценява се до стойност
\newcommand{\evalsto}[2]{\evalstox{#1} \lst!#2!}

% оценява се до стойност без \lstlisting
\newcommand{\evalstos}[2]{#1 $\longrightarrow$ #2}

% не завършва
\newcommand{\evalstoinf}[1]{\evalsto{#1}{...}}

% оценява се до стойност с пауза за въпрос
\newcommand{\evalstop}[2]{\evalstox{#1} \nolinebreak\rvl{\lst!#2!}}

% оценява се до стойност с пауза за въпрос, преминавайки на нов ред
\newcommand{\evalstopnl}[2]{\evalstoxnl{#1} \nolinebreak\rvl{\lst!#2!}}

% оценява се до стойност с пауза за въпрос без форматиране
\newcommand{\evalstops}[2]{\evalstos{#1} \rvl{\tt{#2}}}

% грешка при оценяване
\newcommand{\evalstoerr}[1]{\evalstox{#1} \nolinebreak \textsf{\alert{Грешка!}}}

% грешка при оценяване без lstlisting
\newcommand{\evalstoerrs}[1]{\evalstos{#1}\nolinebreak \textsf{\alert{Грешка!}}}

% грешка при оценяване с пауза за въпрос
\newcommand{\evalstoerrp}[1]{\evalstox{#1} \nolinebreak\rvl{\textsf{\alert{Грешка!}}}}

% два израза се оценяват до една и съща стойност
\newcommand{\evalstwo}[3]{\lst!#1! \nolinebreak$\longrightarrow$ \nolinebreak\lst!#2!\nolinebreak $\longleftarrow$ \nolinebreak\lst!#3!}

% два израза се оценяват до една и съща стойност с пауза за въпрос
\newcommand{\evalstwop}[3]{\lst!#1! \nolinebreak$\longrightarrow$ \nolinebreak\rvl{#2} \nolinebreak$\longleftarrow$ \nolinebreak \lst!#3!}

%%% макроси за Scheme

% let in
\newcommand{\lett}[2]{\textbf{let }#1\textbf{ in }#2}

% where
\newcommand{\where}{\,\textbf{where}\,}

% среда
\newcommand{\env}[1]{$\mathbf{#1}$}

% оценка в среда
\newcommand{\inenv}[1]{\{\env{#1}\}}

%%% макроси за Haskell

% има тип
\newcommand{\typesto}[2]{\lst!#1 :: #2!}

% има тип с пауза за въпрос
\newcommand{\typestop}[2]{\lst!#1 ::! \rvl{\lst!#2!}}

% няма тип
\newcommand{\ntypes}[1]{\tta{#1 :{}: $\bot$}}

% няма тип с пауза за въпрос
\newcommand{\ntypesp}[1]{\alt<.(1)->\tta\tt{#1 :{}: \rvl{$\bot$}}}

% абстракция за кортеж и списък
\newcommand{\tuplelist}[3]{\tt{#1}$#3_1$\tt, $#3_2$\tt, $\ldots$\tt, $#3_n$\tt{#2}}

% кортеж
\newcommand{\tuple}{\tuplelist()}

% списък
\newcommand{\hlist}{\tuplelist[]}

%%% други макроси и дефиниции

% син цвят по подразбиране
\colorlet{diagramblue}{blue!60!green!40}

% creative commons признание
\newcommand{\imageAttr}[4]{\scalebox{.4}{\textcolor{gray}{``#1'' от #2 (\url{#3}), #4}}}

% съкратена команда за показване само на текущия слайд
% слага се в преамбюла
\newcommand{\crronly}{\includeonlyframes{current}}

% смаляване на шрифта в листинг
\newcommand{\lstsize}[1]{\lstset{basicstyle=#1\ttfamily}}
\newcommand{\lstsmall}{\lstsize\small}
\newcommand{\lstscriptsize}{\lstsize\scriptsize}
\newcommand{\lstfootnotesize}{\lstsize\footnotesize}
\newcommand{\lsttiny}{\lstsize\tiny}

% едновременно смаляване на обикновения шрифт и на този в lstlisting
\newcommand{\sizeboth}[1]{#1\lstsize{#1}}

%%% съкращения на символи

% еквивалентно на
\newcommand{\eqv}{$\Longleftrightarrow$\xspace}

% обикновени кавички
\newcommand{\quot}{\textquotedbl}

% стрелка надолу за вериги от оценки
\newcommand{\bda}{\big\downarrow}

% стрелка нагоре за вериги от среди
\newcommand{\bua}{\big\uparrow}

%%% среди

% листинг в таблица
% https://tex.stackexchange.com/a/392601
\lstnewenvironment{tabularlstlisting}[1][]{}{}

% overlayarea, която по подразбиране изпълва цялата област за текст за текущата тема
% може да се зададе като опционален параметър друга част от височината
\newenvironment{fixedarea}[1][.87]{%
  \begin{overlayarea}\textwidth{#1\textheight}}{%
  \end{overlayarea}}
